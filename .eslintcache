[{"D:\\Javascript_TOP\\memory_card\\src\\index.js":"1","D:\\Javascript_TOP\\memory_card\\src\\App.js":"2","D:\\Javascript_TOP\\memory_card\\src\\components\\Card.js":"3"},{"size":262,"mtime":1609302096170,"results":"4","hashOfConfig":"5"},{"size":4375,"mtime":1609333213683,"results":"6","hashOfConfig":"5"},{"size":454,"mtime":1609325159440,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"rvrrw3",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"D:\\Javascript_TOP\\memory_card\\src\\index.js",[],["17","18"],"D:\\Javascript_TOP\\memory_card\\src\\App.js",["19","20","21"],"import { Fragment, useState, useReducer } from \"react\";\nimport Card from \"./components/Card\";\nimport uniqid from \"uniqid\";\n\nconst App = () => {\n  const [images, setImages] = useState([\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.xxrDSl4iIoOae4fhdxAzCAHaGt%26pid%3DApi&f=1\",\n      name: \"Spongebob\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fstatic.giantbomb.com%2Fuploads%2Foriginal%2F2%2F23921%2F828695-grppic_2104324_patrickstarfanclub.gif&f=1&nofb=1\",\n      name: \"Patrick\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.ZS7GeGFFreX5bbDBtn4gHAHaK5%26pid%3DApi&f=1\",\n      name: \"Sandy\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.-qTH-ogHdxHKxED6pBUe6AHaHa%26pid%3DApi&f=1\",\n      name: \"Jimmy\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.x0RsMqq-iKBDwE9bQIGcBgHaKq%26pid%3DApi&f=1\",\n      name: \"Sonic\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fsickr.files.wordpress.com%2F2014%2F07%2Fpikachu_sit.png%3Fw%3D1200&f=1&nofb=1\",\n      name: \"Pikachu\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fimg4.wikia.nocookie.net%2F__cb20110728124217%2Fnintendo%2Fen%2Fimages%2Fe%2Fe3%2FSquirtle.png&f=1&nofb=1\",\n      name: \"Squirtle\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.3HW5a0FBwKD10mWLCE4XCwHaIC%26pid%3DApi&f=1\",\n      name: \"Charmander\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.l2q0uZ89kOwYVOd4t1IimAAAAA%26pid%3DApi&f=1\",\n      name: \"Gintoki\",\n      selected: false,\n    },\n    {\n      url:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.0jUzbiTVkFhqC9KE6xmb8QAAAA%26pid%3DApi&f=1\",\n      name: \"Shinpachi\",\n      selected: false,\n    },\n  ]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [test, setTest] = useState(1);\n\n  const reorder = (array) => {\n    for (var i = array.length - 1; i > 0; i--) {\n      // Generate random number\n      var j = Math.floor(Math.random() * (i + 1));\n\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n    }\n  };\n\n  const makeGuess = (name) => {\n    console.log(name);\n    // look for the item within state\n    const correspondingImage = images.find((image) => image.name === name);\n    if (correspondingImage.selected) {\n      // truthy, means choosen before\n      if (currentScore > highScore) {\n        setHighScore(currentScore);\n      }\n      setCurrentScore(0);\n      // reset all images\n\n      let newArray = images.map((image) =>\n        image.selected === true ? { ...image, selected: false } : image\n      );\n\n      reorder(newArray);\n      setImages(newArray);\n    } else {\n      setImages();\n\n      let newArray = images.map((image) =>\n        image.name !== name\n          ? image\n          : image.selected === false\n          ? { ...image, selected: true }\n          : image\n      );\n\n      reorder(newArray);\n      setImages(newArray);\n      setCurrentScore(currentScore + 1);\n    }\n  };\n\n  const display = (\n    <Fragment>\n      <h1>Memory Card Game</h1>\n      <p>\n        Get points by clicking on an image but don't click on any more than\n        once!\n      </p>\n      <h4>Current Score = {currentScore}</h4>\n      <small> High Score = {highScore}</small>\n\n      <div className=\"card-wrapper\">\n        {images.map((image) => (\n          <Card makeGuess={makeGuess} key={uniqid()} image={image} />\n        ))}\n      </div>\n      <button onClick={() => console.log(test)}>Check</button>\n    </Fragment>\n  );\n  return display;\n};\n\nexport default App;\n","D:\\Javascript_TOP\\memory_card\\src\\components\\Card.js",["22","23","24"],"import { Fragment, useState } from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const { url, name, selected } = props.image;\r\n  const display = (\r\n    <div\r\n      onClick={() => props.makeGuess(name)}\r\n      className=\"card shadow-lg p-3 mb-5 bg-white rounded\"\r\n    >\r\n      <div className=\"img-container\">\r\n        <img src={url} alt={name}></img>\r\n        <div>{name}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return display;\r\n};\r\n\r\nexport default Card;\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":30,"nodeType":"31","messageId":"32","endLine":1,"endColumn":40},{"ruleId":"29","severity":1,"message":"33","line":70,"column":16,"nodeType":"31","messageId":"32","endLine":70,"endColumn":23},{"ruleId":"29","severity":1,"message":"34","line":84,"column":9,"nodeType":"31","messageId":"32","endLine":84,"endColumn":16},{"ruleId":"29","severity":1,"message":"35","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":18},{"ruleId":"29","severity":1,"message":"36","line":1,"column":20,"nodeType":"31","messageId":"32","endLine":1,"endColumn":28},{"ruleId":"29","severity":1,"message":"37","line":4,"column":22,"nodeType":"31","messageId":"32","endLine":4,"endColumn":30},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'setTest' is assigned a value but never used.","'reducer' is assigned a value but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'selected' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]